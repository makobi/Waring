# This file was *autogenerated* from the file waring.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_5 = Integer(5)
def waring(p, d):
    finite_field = GF(p) # Create finite field
    solutions = [] # Holds the solutions
    waring_number = _sage_const_1 
    BUFFER = []

    for k in finite_field:
    	current = (k**d)%p
    	if not (current in solutions):
    		solutions.append(current)

    BUFFER = solutions

    while not len(solutions) == p:
    	for i in range (_sage_const_0 , len(solutions)):
    		for j in range (_sage_const_0 , len(solutions)):
    			res = solutions[i] + solutions[j]
    			if not (res in solutions):
    				BUFFER.append(res)
    	solutions = BUFFER
    	BUFFER = []
    	waring_number += _sage_const_1 

    if len(solutions) == p:
    	print solutions
    	print waring_number

waring(_sage_const_5 , _sage_const_2 )
